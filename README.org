# #+OPTIONS: ':t *:t -:t ::t <:t H:3 \n:nil ^:t arch:headline author:t
# #+OPTIONS: broken-links:nil c:nil creator:nil d:(not "LOGBOOK")
# #+OPTIONS: date:t e:t email:nil f:t inline:t num:t p:nil pri:nil
# #+OPTIONS: prop:nil stat:t tags:t tasks:t tex:t timestamp:t title:t
# #+OPTIONS: toc:t todo:t |:t
 
#+OPTIONS: toc:nil

#+TITLE: README
#+DATE: <2018-10-28 Sun>
#+AUTHOR: Stanislav Arnaudov
#+EMAIL: arnaud@localhost.localdomain
#+LANGUAGE: en
#+SELECT_TAGS: export
#+EXCLUDE_TAGS: noexport
#+CREATOR: Emacs 26.1 (Org mode 9.1.13)

* Python Requirements Installer (pir)

** Abstract
The package provides helpful hints while editing the /requirements.txt/ file in python projects. With the utility installed, the missing from pip's index packages are highlighted with "warning" color and the present ones with "success color". This should act as a prompt to call a function that will go over the missing packages and will install them with ~pip install~. 
\\
The idea for Emacs-package came to me while I was reading an article comparing Emacs and PyCharm and one of the "pros" of PyCharm was it ability to tell you when a package from requirements.txt is missing and to install it for you. So there you go, Emacs has now has that feature too!
\\
For easy /requirements.txt/ editing I also recommend the [[https://github.com/Wilfred/pip-requirements.el][pip-requirements]] package. It provides minor mode and auto-completion for the packages in your /requirements.txt/ file.
\\

*** Screenshots

[[file:./screenshot/package.png]]          [[file:./screenshot/packages-highlighted.png]]


** Installation
Currently the project is not on [[https://melpa.org/][Melpa]] so you'll have to download it and loaded in your init file manually. Just clone the repository
#+BEGIN_EXAMPLE
git clone https://github.com/palikar/python-requirements-installer
#+END_EXAMPLE
and put something like
#+BEGIN_SRC emacs-lisp
(load "/your/path/to/pir.el")
#+END_SRC

*** Dependencies

- The packages uses a library for easy creation of overlays - [[https://github.com/ShingoFukuyama/ov.el][ov.el]]. You probably have to have that installed on your Emacs in order to be able to use /pri/.

** Usage

The package provides a minor mode -- ~pri-mode~ -- that gets automatically added to the ~auto-mode-alist~ and get activated every time you open a /requirements.txt/ file. Al of the provided function must be used while the this minor mode is active. 
\\
The provided by the packge keybindings are on their own key-map -- ~pri-mode-map~. The default prefix key is ~C-c -~ and it is customizable. The provided for now functions are given in the following table.

| Keybinding   | Function               | Description                                                                                |
|--------------+------------------------+--------------------------------------------------------------------------------------------|
|--------------+------------------------+--------------------------------------------------------------------------------------------|
| ~<prefix> v~ | ~pri-check-packages~   | Checks all of the packages in a requirements.txt file<br>and annotates them appropriately. |
| ~<prefix> i~ | ~pri-install-packages~ | Goes over the uninstalled packages and prompts you to<br>install each of them.             |
| ~<prefix> c~ | ~pri-clear-checks~     | Clears the annotations created by ~pri-check-packages~                                     |


Each time you save a /requirements.txt/ file _and_ the  ~pri-mode~ is active, the ~pri-check-packages~ function will be called. You'll be therefore frequently notify about the missing and present /pip/ packages.
